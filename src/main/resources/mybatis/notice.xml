<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dev.mvc.notice.NoticeDAOInter">

   <!-- 등록 -->
  <insert id="create" parameterType="dev.mvc.notice.NoticeVO">
    INSERT INTO  notice(noticeno, adminno, title, contents, rdate)
    VALUES (notice_seq.nextval, #{adminno}, #{title}, #{contents}, sysdate)
  </insert>
  
   <!-- 공지사항 list -->  
  <select id="list" resultType="dev.mvc.notice.NoticeVO" parameterType="int">
    SELECT noticeno, adminno, title, contents, rdate
    FROM notice
    ORDER BY noticeno desc
  </select>

  <!-- noticeno로 회원 정보 조회 -->
  <select id="read" resultType="dev.mvc.notice.NoticeVO" parameterType="int">
    SELECT noticeno, adminno, title, contents, rdate
    FROM notice
    WHERE noticeno = #{noticeno}
  </select>  
  
   <!-- 수정 -->
    <update id="update" parameterType="dev.mvc.notice.NoticeVO">
    UPDATE notice 
    SET title=#{title}, contents=#{contents}
    WHERE noticeno=#{noticeno}
  </update>
  
   <!-- 삭제 -->  
    <delete id="delete" parameterType="int">
    DELETE FROM notice
    WHERE noticeno=#{noticeno}
  </delete>

  <!-- 검색 목록-->
  <select id="list_search" resultType="dev.mvc.notice.NoticeVO" parameterType="String">
    SELECT noticeno, title, contents, rdate 
    FROM notice 
   <choose>
   <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->

   </when>
   <otherwise> <!-- 검색하는 경우 -->
    WHERE (UPPER(title) LIKE UPPER('%' || #{word} || '%') 
                OR UPPER(contents) LIKE UPPER('%' || #{word} || '%' ))
      </otherwise>
    </choose>
    ORDER BY noticeno ASC
  </select>

  <!-- 검색 레코드 갯수 -->
  <select id="search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM notice
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수-->
        
      </when>
      <otherwise> <!-- 검색하는 경우의 레코드 갯수-->
        WHERE  (UPPER(title) LIKE '%' || #{word} || '%' 
                                                     OR UPPER(contents) LIKE '%' || #{word} || '%' 
      </otherwise>
    </choose>
  </select>    
  
  
  
    <!-- 카테고리별 검색 목록 + 페이징 + 메인 이미지 -->   
  <select id="list_search_paging" 
             resultType="dev.mvc.notice.NoticeVO" parameterType="HashMap">
   SELECT noticeno, title, contents, rdate, r
   FROM (
              SELECT noticeno, title, contents, rdate, rownum as r
              FROM (
                        SELECT noticeno, title, contents, rdate
                        FROM notice
                        <choose>
                          <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
                           </when>
                          <otherwise>
                             WHERE (UPPER(title) LIKE UPPER('%' || #{word} || '%') 
                                                                  OR UPPER(contents) LIKE UPPER('%' || #{word} || '%' ))
                          </otherwise>
                        </choose>
                        ORDER BY noticeno DESC
                        )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
     </select>

    <!--  
    SELECT noticeno, title, contents, rdate, r
   FROM (
              SELECT noticeno, title, contents, rdate, rownum as r
              FROM (
                        SELECT noticeno, title, contents, rdate
                        FROM notice
                        <choose>
                          <when test="word == null or word == ''"> 
                             WHERE noticeno=#{noticeno}
                          </when>
                          <otherwise>
                            WHERE noticeno=#{noticeno} AND (UPPER(title) LIKE '%' || #{word} || '%' 
                                                                  OR UPPER(contents) LIKE '%' || #{word} || '%' 
                          </otherwise>
                        </choose>
                        ORDER BY noticeno DESC
                        )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
    
    1 page: WHERE r >= 1 AND r <= 10; 
            2 page: WHERE r >= 11 AND r <= 20;
            3 page: WHERE r >= 21 AND r <= 30; -->
 
</mapper>